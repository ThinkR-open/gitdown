[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2019 ThinkR Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/ab-create-git_down.html","id":"create-a-reproducible-example-of-a-versioned-directory","dir":"Articles","previous_headings":"","what":"Create a reproducible example of a versioned directory","title":"Create a gitbook with git_down","text":"Create versioned directory commits NEWS.md temporary directory commits mention issue # commits mention ticket ticket commit associated tag","code":"repo <- fake_repo()"},{"path":"/articles/ab-create-git_down.html","id":"build-book-of-commits-messages","dir":"Articles","previous_headings":"","what":"Build book of commits messages","title":"Create a gitbook with git_down","text":"main function {gitdown} build gitbook commit messages ordered according pattern. commit message associated issue recorded section issue. commit message can thus appears multiple times associated multiple issues. referencing system tickets external software, can also create gitbook associated like using ticket example .","code":"git_down(repo, pattern = c(\"Tickets\" = \"ticket[[:digit:]]+\", \"Issues\" = \"#[[:digit:]]+\"))"},{"path":"/articles/ab-create-git_down.html","id":"read-list-of-commits-and-extract-information","dir":"Articles","previous_headings":"","what":"Read list of commits and extract information","title":"Create a gitbook with git_down","text":"side effect {gitdown}, can get intermediate information used build book exported functions.","code":""},{"path":"/articles/ab-create-git_down.html","id":"get-commits-and-find-pattern","dir":"Articles","previous_headings":"Read list of commits and extract information","what":"Get commits and find pattern","title":"Create a gitbook with git_down","text":"Find commits branch associate tags recursively find commits mentioning issue #123","code":"get_commits_tags(repo, ref = \"main\") #> 4 commits found. #> # A tibble: 4 × 9 #>   sha            summary message author email when                order tag.name #>   <chr>          <chr>   <chr>   <chr>  <chr> <dttm>              <int> <chr>    #> 1 6100a142b01c4… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:52     4 NA       #> 2 fc250e1e72fe1… Third … \"Third… Alice  alic… 2024-03-27 00:55:52     3 v0.1     #> 3 75ad11db79e33… exampl… \"examp… Alice  alic… 2024-03-27 00:55:52     2 v0.1     #> 4 5bee0e5bd0145… First … \"First… Alice  alic… 2024-03-27 00:55:52     1 v0.1     #> # ℹ 1 more variable: tag.message <chr> get_commits_pattern(repo, pattern = \"#[[:digit:]]+\", ref = \"main\") #> 4 commits found. #> # A tibble: 7 × 12 #>   sha            summary message author email when                order tag.name #>   <chr>          <chr>   <chr>   <chr>  <chr> <dttm>              <int> <chr>    #> 1 6100a142b01c4… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:52     4 NA       #> 2 6100a142b01c4… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:52     4 NA       #> 3 6100a142b01c4… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:52     4 NA       #> 4 fc250e1e72fe1… Third … \"Third… Alice  alic… 2024-03-27 00:55:52     3 v0.1     #> 5 fc250e1e72fe1… Third … \"Third… Alice  alic… 2024-03-27 00:55:52     3 v0.1     #> 6 75ad11db79e33… exampl… \"examp… Alice  alic… 2024-03-27 00:55:52     2 v0.1     #> 7 5bee0e5bd0145… First … \"First… Alice  alic… 2024-03-27 00:55:52     1 v0.1     #> # ℹ 4 more variables: tag.message <chr>, pattern.type <chr>, #> #   pattern.content <chr>, pattern.title <chr>"},{"path":"/articles/ab-create-git_down.html","id":"create-a-vignette-that-lists-all-files-with-date-of-modification","dir":"Articles","previous_headings":"","what":"Create a vignette that lists all files with date of modification","title":"Create a gitbook with git_down","text":"example, vignette show content:","code":"repo_pkg <- fake_repo(as.package = TRUE) # List only files in R/ directory create_vignette_last_modif(repo_pkg) # List all files of the git repository create_vignette_last_modif(repo_pkg, path = \"\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sébastien Rochette. Author, maintainer. Cervan Girard. Author. ThinkR. Copyright holder. Institut de Recherches Internationales Servier. Sponsor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rochette S, Girard C (2024). gitdown: Turn Git Commit Messages HTML Book. R package version 0.1.6,  https://github.com/Thinkr-open/gitdown, https://thinkr-open.github.io/gitdown/.","code":"@Manual{,   title = {gitdown: Turn Your Git Commit Messages into a HTML Book},   author = {Sébastien Rochette and Cervan Girard},   year = {2024},   note = {R package version 0.1.6,  https://github.com/Thinkr-open/gitdown},   url = {https://thinkr-open.github.io/gitdown/}, }"},{"path":"/index.html","id":"gitdown-","dir":"","previous_headings":"","what":"Turn Your Git Commit Messages Into A Bookdown","title":"Turn Your Git Commit Messages Into A Bookdown","text":"goal {gitdown} build bookdown report commit messages arranged according pattern. Book can organized according git tags, issues mentioned (e.g. #123) custom character chain included git commit messages (e.g. category_ use like category_ui, category_doc, …). Full documentation {pkgdown} site : https://thinkr-open.github.io/gitdown/index.html","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Turn Your Git Commit Messages Into A Bookdown","text":"can install stable version {gitdown} CRAN: can install last version {gitdown} GitHub:","code":"install.packages(\"gitdown\") remotes::install_github(\"ThinkR-open/gitdown\")"},{"path":"/index.html","id":"create-a-reproducible-example-of-a-versioned-directory","dir":"","previous_headings":"","what":"Create a reproducible example of a versioned directory","title":"Turn Your Git Commit Messages Into A Bookdown","text":"Create versioned directory commits NEWS.md temporary directory commits mention issue # commits mention ticket ticket commit associated tag","code":"library(dplyr) library(gitdown) ## Create fake repository for the example repo <- fake_repo()"},{"path":"/index.html","id":"create-a-gitbook-of-commits-sorted-by-a-pattern","dir":"","previous_headings":"","what":"Create a gitbook of commits sorted by a pattern","title":"Turn Your Git Commit Messages Into A Bookdown","text":"main function {gitdown} build gitbook commit messages ordered according pattern. commit message associated issue recorded section issue. commit message can thus appears multiple times associated multiple issues. referencing system tickets external software, can also create gitbook associated like using ticket example .  add table correspondence, can change titles patterns.Note can use {gitlabr} {gh} retrieve list issues GitLab GitHub respectively, presented “Download GitLab GitHub issues make summary report commits”. Note characters like [, ], _ * replaced - titles avoid conflicts markdown syntax.","code":"git_down(repo, pattern = c(\"Tickets\" = \"ticket[[:digit:]]+\",                            \"Issues\" = \"#[[:digit:]]+\")) # With table of correspondence pattern.table <- data.frame(   number = c(\"#2\", \"#1\", \"#1000\"),   title = c(\"#2 A second issue to illustrate a blog post\",             \"#1 An example of issue\",             \"#1000 issue with no commit\")) git_down(   pattern = c(\"Issue\" = \"#[[:digit:]]+\"),   pattern.table = pattern.table )"},{"path":"/index.html","id":"read-list-of-commits-and-extract-information","dir":"","previous_headings":"","what":"Read list of commits and extract information","title":"Turn Your Git Commit Messages Into A Bookdown","text":"side effect {gitdown}, can get intermediate information used build book exported functions. Get commits issues mentioned. searched pattern # followed least one number: \"#[[:digit:]]+\". Variable pattern.content lists patterns found commit messages. Get commits issues specific home-made pattern. Use named vector properly separate types patterns.","code":"get_commits_pattern(repo, pattern = \"#[[:digit:]]+\", ref = \"main\") %>%    select(pattern.content, everything()) #> 4 commits found. #> # A tibble: 7 × 12 #>   pattern.content sha     summary message author email when                order #>   <chr>           <chr>   <chr>   <chr>   <chr>  <chr> <dttm>              <int> #> 1 #32             1fd238… Add NE… \"Add N… Alice  alic… 2024-02-28 13:22:16     4 #> 2 #1              1fd238… Add NE… \"Add N… Alice  alic… 2024-02-28 13:22:16     4 #> 3 #12             1fd238… Add NE… \"Add N… Alice  alic… 2024-02-28 13:22:16     4 #> 4 #2              91e2c1… Third … \"Third… Alice  alic… 2024-02-28 13:22:16     3 #> 5 #145            91e2c1… Third … \"Third… Alice  alic… 2024-02-28 13:22:16     3 #> 6 #1              7e998d… exampl… \"examp… Alice  alic… 2024-02-28 13:22:16     2 #> 7 <NA>            1b6cc5… First … \"First… Alice  alic… 2024-02-28 13:22:16     1 #> # ℹ 4 more variables: tag.name <chr>, tag.message <chr>, pattern.type <chr>, #> #   pattern.title <chr> get_commits_pattern(   repo,    pattern =  c(\"Tickets\" = \"ticket[[:digit:]]+\", \"Issues\" = \"#[[:digit:]]+\"),   ref = \"main\" ) %>%    select(pattern.type, pattern.content, everything()) #> 4 commits found. #> # A tibble: 12 × 12 #>    pattern.type pattern.content sha                 summary message author email #>    <chr>        <chr>           <chr>               <chr>   <chr>   <chr>  <chr> #>  1 Tickets      ticket6789      1fd238efc602f52946… Add NE… \"Add N… Alice  alic… #>  2 Tickets      ticket1234      1fd238efc602f52946… Add NE… \"Add N… Alice  alic… #>  3 Issues       #32             1fd238efc602f52946… Add NE… \"Add N… Alice  alic… #>  4 Issues       #1              1fd238efc602f52946… Add NE… \"Add N… Alice  alic… #>  5 Issues       #12             1fd238efc602f52946… Add NE… \"Add N… Alice  alic… #>  6 Tickets      <NA>            91e2c152a0525fc589… Third … \"Third… Alice  alic… #>  7 Issues       #2              91e2c152a0525fc589… Third … \"Third… Alice  alic… #>  8 Issues       #145            91e2c152a0525fc589… Third … \"Third… Alice  alic… #>  9 Tickets      ticket1234      7e998d8e673e331274… exampl… \"examp… Alice  alic… #> 10 Issues       #1              7e998d8e673e331274… exampl… \"examp… Alice  alic… #> 11 Tickets      <NA>            1b6cc5d04920de4a60… First … \"First… Alice  alic… #> 12 Issues       <NA>            1b6cc5d04920de4a60… First … \"First… Alice  alic… #> # ℹ 5 more variables: when <dttm>, order <int>, tag.name <chr>, #> #   tag.message <chr>, pattern.title <chr>"},{"path":"/index.html","id":"create-a-vignette-that-lists-all-files-with-date-of-modification","dir":"","previous_headings":"","what":"Create a vignette that lists all files with date of modification","title":"Turn Your Git Commit Messages Into A Bookdown","text":"example, vignette show content:","code":"repo_pkg <- fake_repo(as.package = TRUE) # List only files in R/ directory create_vignette_last_modif(repo_pkg) # List all files of the git repository create_vignette_last_modif(repo_pkg, path = \"\")"},{"path":"/index.html","id":"sponsor","dir":"","previous_headings":"","what":"Sponsor","title":"Turn Your Git Commit Messages Into A Bookdown","text":"development package sponsored :","code":""},{"path":"/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Turn Your Git Commit Messages Into A Bookdown","text":"Please note {gitdown} project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/reference/create_vignette_last_modif.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates and updates a vignette in the 'vignette/' directory of a package with last modification time of tracked files — create_vignette_last_modif","title":"Creates and updates a vignette in the 'vignette/' directory of a package with last modification time of tracked files — create_vignette_last_modif","text":"Creates updates vignette 'vignette/' directory package last modification time tracked files","code":""},{"path":"/reference/create_vignette_last_modif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates and updates a vignette in the 'vignette/' directory of a package with last modification time of tracked files — create_vignette_last_modif","text":"","code":"create_vignette_last_modif(   repo = \".\",   path = \"R\",   recursive = TRUE,   untracked = TRUE )  update_vignette_last_modif(   repo = \".\",   path = \"R\",   recursive = TRUE,   untracked = TRUE )"},{"path":"/reference/create_vignette_last_modif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates and updates a vignette in the 'vignette/' directory of a package with last modification time of tracked files — create_vignette_last_modif","text":"repo git repository path Default R folder. Use \"\" complete directory recursive Logical. listing recurse directories? untracked Logical. tracked files included?","code":""},{"path":"/reference/create_vignette_last_modif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates and updates a vignette in the 'vignette/' directory of a package with last modification time of tracked files — create_vignette_last_modif","text":"return value, called side effect. Creates updates content \"modification_files.Rmd\" vignette","code":""},{"path":"/reference/create_vignette_last_modif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates and updates a vignette in the 'vignette/' directory of a package with last modification time of tracked files — create_vignette_last_modif","text":"","code":"# Creates vignette repo <- fake_repo(as.package = TRUE) if (rmarkdown::pandoc_available(\"2.0.0\")) {   create_vignette_last_modif(repo, path = \"R\") } # update vignette repo <- fake_repo(as.package = TRUE) if (rmarkdown::pandoc_available(\"2.0.0\")) {   update_vignette_last_modif(repo, path = \"R\")   rmarkdown::render(file.path(repo, \"vignettes\", \"modification_files.Rmd\")) } #>  #>  #> processing file: modification_files.Rmd #> 1/3         #> 2/3 [setup] #> 3/3         #> output file: modification_files.knit.md #> Warning: The vignette title specified in \\VignetteIndexEntry{} is different from the title in the YAML metadata. The former is \"zz-modification-of-files\", and the latter is \"Modifications of files\". If that is intentional, you may set options(rmarkdown.html_vignette.check_title = FALSE) to suppress this check. #> /opt/hostedtoolcache/pandoc/3.1.11/x64/pandoc +RTS -K512m -RTS modification_files.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output modification_files.html --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua --embed-resources --standalone --section-divs --template /home/runner/work/_temp/Library/rmarkdown/rmd/h/default.html --highlight-style pygments --css /home/runner/work/_temp/Library/rmarkdown/rmarkdown/templates/html_vignette/resources/vignette.css --mathjax --variable 'mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' --include-in-header /tmp/RtmpDnVukY/rmarkdown-str17ff5c1eb9d4.html  #>  #> Output created: modification_files.html"},{"path":"/reference/each_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the text to add in a markdown file to present each pattern as a chapter of the book — each_pattern","title":"Create the text to add in a markdown file to present each pattern as a chapter of the book — each_pattern","text":"Create text add markdown file present pattern chapter book","code":""},{"path":"/reference/each_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the text to add in a markdown file to present each pattern as a chapter of the book — each_pattern","text":"","code":"each_pattern(nest_commits, pattern.type)"},{"path":"/reference/each_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the text to add in a markdown file to present each pattern as a chapter of the book — each_pattern","text":"nest_commits commits nested nest_commits_by_pattern pattern.type Character name pattern filter","code":""},{"path":"/reference/each_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the text to add in a markdown file to present each pattern as a chapter of the book — each_pattern","text":"tibble row different pattern found 'text' column included markdown file: pattern.content: pattern found commit message link_pattern: internal url pattern future HTML gitbook text: list vectors markdown text present commits pattern HTML gitbook output pattern.type: name pattern found commit message pattern.title: pattern.content title used pattern.table nested 'data' column related commits pattern_numeric: extraction numeric value pattern.content data: nested list tibbles commits content issued get_commits_pattern()","code":""},{"path":"/reference/each_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the text to add in a markdown file to present each pattern as a chapter of the book — each_pattern","text":"","code":"repo <- fake_repo() res_commits <- nest_commits_by_pattern(   repo,   pattern = c(\"Tickets\" = \"ticket[[:digit:]]+\"),   ref = \"main\", silent = TRUE ) each_pattern(res_commits, \"Tickets\") #> # A tibble: 4 × 7 #>   pattern.content  link_pattern text  pattern.type pattern.title pattern_numeric #>   <chr>            <chr>        <lis> <chr>        <chr>                   <dbl> #> 1 Tickets          tickets      <chr> NA           NA                         NA #> 2 ticket1234       tickets-tic… <chr> Tickets      ticket1234               1234 #> 3 ticket6789       tickets-tic… <chr> Tickets      ticket6789               6789 #> 4 No related tick… tickets-na   <chr> Tickets      No related t…              NA #> # ℹ 1 more variable: data <list>"},{"path":"/reference/fake_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a fake git repository in a specific folder — fake_repo","title":"Create a fake git repository in a specific folder — fake_repo","text":"fake repository allows create reproducible examples package functions","code":""},{"path":"/reference/fake_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a fake git repository in a specific folder — fake_repo","text":"","code":"fake_repo(path = tempfile(pattern = \"git2r-\"), as.package = FALSE)"},{"path":"/reference/fake_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a fake git repository in a specific folder — fake_repo","text":"path Path fake repository .package Logical. Whether add R/ vignettes/ directories fake package","code":""},{"path":"/reference/fake_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a fake git repository in a specific folder — fake_repo","text":"Character. Path fake repository used reproducible examples. Fake repository contains files initiated git repository.","code":""},{"path":"/reference/fake_repo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a fake git repository in a specific folder — fake_repo","text":"","code":"# Fake repository with git fake_repo() #> [1] \"/tmp/RtmpDnVukY/git2r-17ff22b83968\" # Fake repository that looks like package with git fake_repo(as.package = TRUE) #> [1] \"/tmp/RtmpDnVukY/git2r-17ff2e5ab72e\""},{"path":"/reference/get_commits_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Get commits associated with a text pattern — get_commits_pattern","title":"Get commits associated with a text pattern — get_commits_pattern","text":"Get commits associated text pattern","code":""},{"path":"/reference/get_commits_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get commits associated with a text pattern — get_commits_pattern","text":"","code":"get_commits_pattern(   repo = \".\",   pattern = c(Ticket = \"#[[:digit:]]+\"),   pattern.table = NULL,   ref = \"main\",   path = NULL,   silent = FALSE )"},{"path":"/reference/get_commits_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get commits associated with a text pattern — get_commits_pattern","text":"repo path repository git_repository object. Default '.' pattern Named vector regex pattern expose commits, like c(\"Issues\" = \"#\\[\\[:digit:\\]\\]\") issues pattern.table data.frame two columns: pattern description pattern. used correspondence table add names existing patterns. ref name reference list commits e.g. tag branch. default NULL current branch. path path file. NULL, commits modifying file returned. Note modifying commits occurred file given present name returned; , output git log ---follow reproduced. silent Logical. Whether hide messages.","code":""},{"path":"/reference/get_commits_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get commits associated with a text pattern — get_commits_pattern","text":"tibble one line commit, duplicated associated multiple patterns following columns: sha: sha commit summary: First line commit message message: Full content commit message author: author commit email: email author : commit time order: order commit messages. 1 oldest. tag.name: name tag associated commits since last tag tag.message: message tagged commit pattern.type: name pattern found commit message pattern.content: pattern found commit message","code":""},{"path":"/reference/get_commits_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get commits associated with a text pattern — get_commits_pattern","text":"","code":"repo <- fake_repo() get_commits_pattern(repo = repo, pattern = c(\"Ticket\" = \"#[[:digit:]]+\")) #> 4 commits found. #> # A tibble: 7 × 12 #>   sha            summary message author email when                order tag.name #>   <chr>          <chr>   <chr>   <chr>  <chr> <dttm>              <int> <chr>    #> 1 c143e2b127318… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #> 2 c143e2b127318… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #> 3 c143e2b127318… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #> 4 cdf4d6469763c… Third … \"Third… Alice  alic… 2024-03-27 00:55:49     3 v0.1     #> 5 cdf4d6469763c… Third … \"Third… Alice  alic… 2024-03-27 00:55:49     3 v0.1     #> 6 67a1b0eaa64f8… exampl… \"examp… Alice  alic… 2024-03-27 00:55:49     2 v0.1     #> 7 9987925e49b71… First … \"First… Alice  alic… 2024-03-27 00:55:49     1 v0.1     #> # ℹ 4 more variables: tag.message <chr>, pattern.type <chr>, #> #   pattern.content <chr>, pattern.title <chr> get_commits_pattern(repo = repo,   pattern = c(\"Ticket\" = \"ticket[[:digit:]]+\", \"Issues\" = \"#[[:digit:]]+\")) #> 4 commits found. #> # A tibble: 12 × 12 #>    sha           summary message author email when                order tag.name #>    <chr>         <chr>   <chr>   <chr>  <chr> <dttm>              <int> <chr>    #>  1 c143e2b12731… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #>  2 c143e2b12731… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #>  3 c143e2b12731… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #>  4 c143e2b12731… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #>  5 c143e2b12731… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #>  6 cdf4d6469763… Third … \"Third… Alice  alic… 2024-03-27 00:55:49     3 v0.1     #>  7 cdf4d6469763… Third … \"Third… Alice  alic… 2024-03-27 00:55:49     3 v0.1     #>  8 cdf4d6469763… Third … \"Third… Alice  alic… 2024-03-27 00:55:49     3 v0.1     #>  9 67a1b0eaa64f… exampl… \"examp… Alice  alic… 2024-03-27 00:55:49     2 v0.1     #> 10 67a1b0eaa64f… exampl… \"examp… Alice  alic… 2024-03-27 00:55:49     2 v0.1     #> 11 9987925e49b7… First … \"First… Alice  alic… 2024-03-27 00:55:49     1 v0.1     #> 12 9987925e49b7… First … \"First… Alice  alic… 2024-03-27 00:55:49     1 v0.1     #> # ℹ 4 more variables: tag.message <chr>, pattern.type <chr>, #> #   pattern.content <chr>, pattern.title <chr>"},{"path":"/reference/get_commits_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Get commits associated chronologically with tags — get_commits_tags","title":"Get commits associated chronologically with tags — get_commits_tags","text":"Get commits associated chronologically tags","code":""},{"path":"/reference/get_commits_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get commits associated chronologically with tags — get_commits_tags","text":"","code":"get_commits_tags(repo = \".\", ref = \"main\", path = NULL, silent = FALSE)"},{"path":"/reference/get_commits_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get commits associated chronologically with tags — get_commits_tags","text":"repo path repository git_repository object. Default '.' ref name reference list commits e.g. tag branch. default NULL current branch. path path file. NULL, commits modifying file returned. Note modifying commits occurred file given present name returned; , output git log ---follow reproduced. silent Logical. Whether hide messages.","code":""},{"path":"/reference/get_commits_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get commits associated chronologically with tags — get_commits_tags","text":"tibble one line commit following columns: sha: sha commit summary: First line commit message message: Full content commit message author: author commit email: email author : commit time order: order commit messages. 1 oldest. tag.name: name tag associated commits since last tag tag.message: message tagged commit","code":""},{"path":"/reference/get_commits_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get commits associated chronologically with tags — get_commits_tags","text":"","code":"repo <- fake_repo() get_commits_tags(repo = repo) #> 4 commits found. #> # A tibble: 4 × 9 #>   sha            summary message author email when                order tag.name #>   <chr>          <chr>   <chr>   <chr>  <chr> <dttm>              <int> <chr>    #> 1 c143e2b127318… Add NE… \"Add N… Alice  alic… 2024-03-27 00:55:49     4 NA       #> 2 cdf4d6469763c… Third … \"Third… Alice  alic… 2024-03-27 00:55:49     3 v0.1     #> 3 67a1b0eaa64f8… exampl… \"examp… Alice  alic… 2024-03-27 00:55:49     2 v0.1     #> 4 9987925e49b71… First … \"First… Alice  alic… 2024-03-27 00:55:49     1 v0.1     #> # ℹ 1 more variable: tag.message <chr>"},{"path":"/reference/get_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the first and last modification time for a specific file, based on git2r::blame(). — get_info","title":"Get the first and last modification time for a specific file, based on git2r::blame(). — get_info","text":"Get first last modification time specific file, based git2r::blame().","code":""},{"path":"/reference/get_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the first and last modification time for a specific file, based on git2r::blame(). — get_info","text":"","code":"get_info(path, repo = \".\")"},{"path":"/reference/get_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the first and last modification time for a specific file, based on git2r::blame(). — get_info","text":"path path file repo repo git project","code":""},{"path":"/reference/get_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the first and last modification time for a specific file, based on git2r::blame(). — get_info","text":"list information selected file: file: file name in_repository: Logical. Whether file already commit git repository first_modif: time first modification. Commit time git repository, system date creation otherwise. last_modif: time last modification. Commit time git repository, system date last modification otherwise.","code":""},{"path":"/reference/get_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the first and last modification time for a specific file, based on git2r::blame(). — get_info","text":"","code":"repo <- fake_repo() get_info(list.files(repo)[1], repo = repo) #> $file #> [1] \"NEWS.md\" #>  #> $in_repository #> [1] TRUE #>  #> $first_modif #>                     first  #> \"2024-03-27 00:55:49 UTC\"  #>  #> $last_modif #>                      last  #> \"2024-03-27 00:55:49 UTC\"  #>"},{"path":"/reference/get_last_modif.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the first and last modification time of files of a directory — get_last_modif","title":"Get the first and last modification time of files of a directory — get_last_modif","text":"Get first last modification time files directory","code":""},{"path":"/reference/get_last_modif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the first and last modification time of files of a directory — get_last_modif","text":"","code":"get_last_modif(repo = \".\", path = \"R\", recursive = TRUE, untracked = TRUE)"},{"path":"/reference/get_last_modif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the first and last modification time of files of a directory — get_last_modif","text":"repo git repository path Default R folder. Use \"\" complete directory recursive Logical. listing recurse directories? untracked Logical. tracked files included?","code":""},{"path":"/reference/get_last_modif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the first and last modification time of files of a directory — get_last_modif","text":"list files information file: file: file name in_repository: Logical. Whether file already commit git repository first_modif: time first modification. Commit time git repository, system date creation otherwise. last_modif: time last modification. Commit time git repository, system date last modification otherwise.","code":""},{"path":"/reference/get_last_modif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the first and last modification time of files of a directory — get_last_modif","text":"","code":"repo <- fake_repo() # Complete repository get_last_modif(repo = repo, path = \"\") #> [[1]] #> [[1]]$file #> [1] \"NEWS.md\" #>  #> [[1]]$in_repository #> [1] TRUE #>  #> [[1]]$first_modif #>                     first  #> \"2024-03-27 00:55:50 UTC\"  #>  #> [[1]]$last_modif #>                      last  #> \"2024-03-27 00:55:50 UTC\"  #>  #>  #> [[2]] #> [[2]]$file #> [1] \"example.txt\" #>  #> [[2]]$in_repository #> [1] TRUE #>  #> [[2]]$first_modif #>                     first  #> \"2024-03-27 00:55:50 UTC\"  #>  #> [[2]]$last_modif #>                      last  #> \"2024-03-27 00:55:50 UTC\"  #>  #>  repo <- fake_repo(as.package = TRUE) # Complete repository get_last_modif(repo = repo, path = \"\") #> [[1]] #> [[1]]$file #> [1] \"NEWS.md\" #>  #> [[1]]$in_repository #> [1] TRUE #>  #> [[1]]$first_modif #>                     first  #> \"2024-03-27 00:55:50 UTC\"  #>  #> [[1]]$last_modif #>                      last  #> \"2024-03-27 00:55:50 UTC\"  #>  #>  #> [[2]] #> [[2]]$file #> [1] \"example.txt\" #>  #> [[2]]$in_repository #> [1] TRUE #>  #> [[2]]$first_modif #>                     first  #> \"2024-03-27 00:55:50 UTC\"  #>  #> [[2]]$last_modif #>                      last  #> \"2024-03-27 00:55:50 UTC\"  #>  #>  #> $untracked.untracked #> $untracked.untracked$file #> [1] \"R/my_mean.R\" #>  #> $untracked.untracked$in_repository #> [1] FALSE #>  #> $untracked.untracked$first_modif #> first  #>    NA  #>  #> $untracked.untracked$last_modif #>                      last  #> \"2024-03-27 00:55:50 UTC\"  #>  #>"},{"path":"/reference/git_down.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns the active branch history of git into a bookdown. — git_down","title":"Turns the active branch history of git into a bookdown. — git_down","text":"Read commit messages local git repository sort according tags specific text pattern chapters HTML book using 'bookdown'. chapter group commits. first page gives summary groups.","code":""},{"path":"/reference/git_down.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns the active branch history of git into a bookdown. — git_down","text":"","code":"git_down(   repo = \".\",   book_path = \"gitdown\",   open = TRUE,   author = \"John Doe\",   pattern = c(Issues = \"#[[:digit:]]+\"),   pattern.table = NULL,   ref = \"main\",   ... )"},{"path":"/reference/git_down.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns the active branch history of git into a bookdown. — git_down","text":"repo path repository. Default . book_path path bookdown output. Default \"gitdown\". open bookdown opened compiled? Default TRUE. author Author bookdown pattern Named vector regex pattern expose commits, like c(\"Issues\" = \"#\\[\\[:digit:\\]\\]\") issues pattern.table data.frame two columns: pattern description pattern. used correspondence table add names existing patterns. ref name branch, default main ... parameters pass rmarkdown::render()","code":""},{"path":"/reference/git_down.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns the active branch history of git into a bookdown. — git_down","text":"Path HTML gitbook saved repo/book_path directory.","code":""},{"path":"/reference/git_down.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns the active branch history of git into a bookdown. — git_down","text":"","code":"repo <- fake_repo() if (rmarkdown::pandoc_available(\"2.0.0\")) {   res <- git_down(repo, pattern = c(\"Tickets\" = \"ticket[[:digit:]]+\", \"Issues\" = \"#[[:digit:]]+\"),     open = FALSE) } #>  #>  #> processing file: index.Rmd #> 1/1 #> output file: index.knit.md #> /opt/hostedtoolcache/pandoc/3.1.11/x64/pandoc +RTS -K512m -RTS index.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output index.html --lua-filter /home/runner/work/_temp/Library/bookdown/rmarkdown/lua/custom-environment.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/anchor-sections.lua --metadata-file /tmp/RtmpDnVukY/file17ff1d6a2150 --wrap preserve --standalone --section-divs --table-of-contents --toc-depth 3 --template /home/runner/work/_temp/Library/bookdown/templates/gitbook.html --highlight-style pygments --number-sections --css style.css --mathjax --include-in-header /tmp/RtmpDnVukY/rmarkdown-str17ff79abdd69.html  #>  #> Output created: gitbook-for-git2r-17ff6c845f.html if (FALSE) { # Open the book   browseURL(res) } # With table of correspondence pattern.table <- data.frame(number = c(\"#2\", \"#1\"),   title = c(\"#2 A second issue to illustrate a blog post\",                        \"#1 An example of issue\")) if (rmarkdown::pandoc_available(\"2.0.0\")) {   res <- git_down(repo, pattern = c(\"Issues\" = \"#[[:digit:]]+\"),     pattern.table = pattern.table, open = FALSE) } #>  #>  #> processing file: index.Rmd #> 1/1 #> output file: index.knit.md #> /opt/hostedtoolcache/pandoc/3.1.11/x64/pandoc +RTS -K512m -RTS index.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output index.html --lua-filter /home/runner/work/_temp/Library/bookdown/rmarkdown/lua/custom-environment.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua --lua-filter /home/runner/work/_temp/Library/rmarkdown/rmarkdown/lua/anchor-sections.lua --metadata-file /tmp/RtmpDnVukY/file17ff3137d597 --wrap preserve --standalone --section-divs --table-of-contents --toc-depth 3 --template /home/runner/work/_temp/Library/bookdown/templates/gitbook.html --highlight-style pygments --number-sections --css style.css --mathjax --include-in-header /tmp/RtmpDnVukY/rmarkdown-str17ff40225ab8.html  #>  #> Output created: gitbook-for-git2r-17ff6c845f.html if (FALSE) { # Open the book   browseURL(res) }"},{"path":"/reference/gitdown-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gitdown: Turn Your Git Commit Messages into a HTML Book — gitdown-package","title":"gitdown: Turn Your Git Commit Messages into a HTML Book — gitdown-package","text":"Read commit messages local git repository sort according tags specific text pattern chapters HTML book using 'bookdown'. git history book presentation helps organisms required testify every changes source code, relation features requests. main functions used package git_down() create_vignette_last_modif()","code":""},{"path":[]},{"path":"/reference/gitdown-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gitdown: Turn Your Git Commit Messages into a HTML Book — gitdown-package","text":"Maintainer: Sébastien Rochette sebastien@thinkr.fr (ORCID) Authors: Cervan Girard cervan@thinkr.fr (ORCID) contributors: ThinkR [copyright holder] Institut de Recherches Internationales Servier [sponsor]","code":""},{"path":"/reference/nest_commits_by_pattern.html","id":null,"dir":"Reference","previous_headings":"","what":"Nest all commits by each pattern found in the commit messages — nest_commits_by_pattern","title":"Nest all commits by each pattern found in the commit messages — nest_commits_by_pattern","text":"Nest commits pattern found commit messages","code":""},{"path":"/reference/nest_commits_by_pattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Nest all commits by each pattern found in the commit messages — nest_commits_by_pattern","text":"","code":"nest_commits_by_pattern(   repo,   pattern = c(Issues = \"#[[:digit:]]+\"),   pattern.table = NULL,   ref = \"main\",   silent = TRUE )"},{"path":"/reference/nest_commits_by_pattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Nest all commits by each pattern found in the commit messages — nest_commits_by_pattern","text":"repo path repository git_repository object. Default '.' pattern Named vector regex pattern expose commits, like c(\"Issues\" = \"#\\[\\[:digit:\\]\\]\") issues pattern.table data.frame two columns: pattern description pattern. used correspondence table add names existing patterns. ref name reference list commits e.g. tag branch. default NULL current branch. silent Logical. Whether hide messages.","code":""},{"path":"/reference/nest_commits_by_pattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Nest all commits by each pattern found in the commit messages — nest_commits_by_pattern","text":"tibble row different pattern found commit messages following columns: pattern.type: name pattern found commit message pattern.content: pattern found commit message pattern.title: pattern.content title used pattern.table nested 'data' column related commits pattern_numeric: extraction numeric value pattern.content link_pattern: internal url pattern future HTML gitbook data: nested list tibbles commits content issued get_commits_pattern()","code":""},{"path":"/reference/nest_commits_by_pattern.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Nest all commits by each pattern found in the commit messages — nest_commits_by_pattern","text":"","code":"repo <- fake_repo() nest_commits_by_pattern(repo) #> # A tibble: 6 × 6 #>   pattern.type pattern.content   pattern.title     pattern_numeric link_pattern #>   <chr>        <chr>             <chr>                       <dbl> <chr>        #> 1 Issues       #1                #1                              1 issues-1     #> 2 Issues       #2                #2                              2 issues-2     #> 3 Issues       #12               #12                            12 issues-12    #> 4 Issues       #32               #32                            32 issues-32    #> 5 Issues       #145              #145                          145 issues-145   #> 6 Issues       No related issues No related issues              NA issues-na    #> # ℹ 1 more variable: data <list>  # With table of correspondence pattern.table <- data.frame(   number = c(\"#2\", \"#1\", \"#1000\"),   title = c(\"#2 A second issue to illustrate a blog post\",             \"#1 An example of issue\",             \"#1000 issue with no commit\"))  nest_commits_by_pattern(   repo,   pattern.table = pattern.table,   pattern = c(\"Tickets\" = \"ticket[[:digit:]]+\", \"Issues\" = \"#[[:digit:]]+\")) #> # A tibble: 10 × 6 #>    pattern.type pattern.content    pattern.title    pattern_numeric link_pattern #>    <chr>        <chr>              <chr>                      <dbl> <chr>        #>  1 Issues       #1                 #1 An example o…               1 issues-1     #>  2 Issues       #2                 #2 A second iss…               2 issues-2     #>  3 Issues       #12                #12                           12 issues-12    #>  4 Issues       #32                #32                           32 issues-32    #>  5 Issues       #145               #145                         145 issues-145   #>  6 Issues       #1000              #1000 issue wit…            1000 issues-1000  #>  7 Issues       No related issues  No related issu…              NA issues-na    #>  8 Tickets      ticket1234         ticket1234                  1234 tickets-tic… #>  9 Tickets      ticket6789         ticket6789                  6789 tickets-tic… #> 10 Tickets      No related tickets No related tick…              NA tickets-na   #> # ℹ 1 more variable: data <list>"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/present_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Presenting results of files and last modification time in a printed table using 'kable()' — present_files","title":"Presenting results of files and last modification time in a printed table using 'kable()' — present_files","text":"Presenting results files last modification time printed table using 'kable()'","code":""},{"path":"/reference/present_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presenting results of files and last modification time in a printed table using 'kable()' — present_files","text":"","code":"present_files(repo = \".\", path = \"R\", recursive = TRUE, untracked = TRUE)"},{"path":"/reference/present_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Presenting results of files and last modification time in a printed table using 'kable()' — present_files","text":"repo git repository path Default R folder. Use \"\" complete directory recursive Logical. listing recurse directories? untracked Logical. tracked files included?","code":""},{"path":"/reference/present_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Presenting results of files and last modification time in a printed table using 'kable()' — present_files","text":"'kable()' output included markdown file","code":""},{"path":"/reference/present_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Presenting results of files and last modification time in a printed table using 'kable()' — present_files","text":"","code":"repo <- fake_repo(as.package = TRUE) cat(present_files(repo)) #> |File        |Tracked in git |Date of creation |Last modification   |   #> |:-----------|:--------------|:----------------|:-------------------|   #> |R/my_mean.R |No             |NA               |2024-03-27 00:55:51 |"},{"path":"/news/index.html","id":"gitdown-016","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.6","title":"gitdown 0.1.6","text":"CRAN release: 2022-03-05 Ask Pandoc > 2.0 new {rmarkdown} Use ‘main’ branch default repository example Fix unit test new ‘rmarkdown’ version Fix unit test date-time check due changing timezone","code":""},{"path":"/news/index.html","id":"gitdown-015","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.5","title":"gitdown 0.1.5","text":"CRAN release: 2022-01-21 Change unit tests","code":""},{"path":"/news/index.html","id":"gitdown-014","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.4","title":"gitdown 0.1.4","text":"CRAN release: 2022-01-17 Allow tests start day finish following one","code":""},{"path":"/news/index.html","id":"gitdown-013","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.3","title":"gitdown 0.1.3","text":"CRAN release: 2021-07-22 Protect tests bad time rounding","code":""},{"path":"/news/index.html","id":"gitdown-012","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.2","title":"gitdown 0.1.2","text":"CRAN release: 2021-05-10 Protect older Pandoc versions","code":""},{"path":"/news/index.html","id":"gitdown-011","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.1","title":"gitdown 0.1.1","text":"CRAN release: 2021-05-10 Improve documentation","code":""},{"path":"/news/index.html","id":"gitdown-010","dir":"Changelog","previous_headings":"","what":"gitdown 0.1.0","title":"gitdown 0.1.0","text":"Get ready CRAN","code":""},{"path":"/news/index.html","id":"gitdown-001","dir":"Changelog","previous_headings":"","what":"gitdown 0.0.1","title":"gitdown 0.0.1","text":"Breaking changes * names_section parameter replaced named vector pattern changes * List patterns pattern.table even commits associated * Add parameter pattern.table allow user specific pattern titles * create_vignette_last_modif() creates vignette dates files modification git * Added summary tables section * Added NEWS.md file track changes package.","code":""}]
